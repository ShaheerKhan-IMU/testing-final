{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 13, "column": 0}, "map": {"version":3,"sources":["file:///Users/iftikharkhan/Documents/SwipeSavvy-Dashboard/frontend/app/page.tsx"],"sourcesContent":["\"use client\";\nimport { useEffect, useState } from \"react\";\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  ChartOptions,\n} from \"chart.js\";\nimport { Line } from \"react-chartjs-2\";\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\ntype Sale = {\n  date: string;\n  sales: number;\n};\n\nexport default function Home() {\n  const [data, setData] = useState<Sale[]>([]);\n  const [total_Merchants, settotal_Merchants] = useState<number>(0);\n\n  useEffect(() => {\n    fetch(\"http://localhost:8000/sales\")\n      .then((res) => res.json())\n      .then((json) => {\n        setData(json.data);\n        settotal_Merchants(json.total_Merchants);\n      })\n      .catch((err) => console.error(\"Error fetching sales data:\", err));\n  }, []);\n\n  const chartData = {\n    labels: data.map((item) => item.date),\n    datasets: [\n      {\n        label: \"Sales\",\n        data: data.map((item) => item.sales),\n        borderColor: \"rgba(54, 162, 235, 1)\",\n        backgroundColor: \"rgba(54, 162, 235, 0.2)\",\n        fill: true,\n        tension: 0.4,\n        pointRadius: 5,\n        pointHoverRadius: 7,\n      },\n    ],\n  };\n\n  const chartOptions: ChartOptions<\"line\"> = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: \"top\" as const,\n      },\n      title: {\n        display: true,\n        text: \"ðŸ“ˆ Sales Over Time\",\n        font: {\n          size: 18,\n        },\n      },\n    },\n    animation: {\n      duration: 1000,\n      easing: \"easeInOutQuad\",\n    },\n  };\n\n  return (\n    <main style={{ width: \"600px\", margin: \"40px auto\" }}>\n      <h2 style={{ textAlign: \"center\" }}>Cleaned Sales Data</h2>\n      <h1 style={{ textAlign: \"center\" }}>Total Records: {total_Merchants}</h1>\n      {data.length > 0 ? (\n        <Line data={chartData} options={chartOptions} />\n      ) : (\n        <p style={{ textAlign: \"center\" }}>Loading chart...</p>\n      )}\n    </main>\n  );\n}\n"],"names":[],"mappings":";;;;AACA;AACA;AAWA;AAbA;;;;;AAeA,4JAAA,CAAA,QAAO,CAAC,QAAQ,CACd,4JAAA,CAAA,gBAAa,EACb,4JAAA,CAAA,cAAW,EACX,4JAAA,CAAA,eAAY,EACZ,4JAAA,CAAA,cAAW,EACX,4JAAA,CAAA,QAAK,EACL,4JAAA,CAAA,UAAO,EACP,4JAAA,CAAA,SAAM;AAQO,SAAS;IACtB,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU,EAAE;IAC3C,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU;IAE/D,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,+BACH,IAAI,CAAC,CAAC,MAAQ,IAAI,IAAI,IACtB,IAAI,CAAC,CAAC;YACL,QAAQ,KAAK,IAAI;YACjB,mBAAmB,KAAK,eAAe;QACzC,GACC,KAAK,CAAC,CAAC,MAAQ,QAAQ,KAAK,CAAC,8BAA8B;IAChE,GAAG,EAAE;IAEL,MAAM,YAAY;QAChB,QAAQ,KAAK,GAAG,CAAC,CAAC,OAAS,KAAK,IAAI;QACpC,UAAU;YACR;gBACE,OAAO;gBACP,MAAM,KAAK,GAAG,CAAC,CAAC,OAAS,KAAK,KAAK;gBACnC,aAAa;gBACb,iBAAiB;gBACjB,MAAM;gBACN,SAAS;gBACT,aAAa;gBACb,kBAAkB;YACpB;SACD;IACH;IAEA,MAAM,eAAqC;QACzC,YAAY;QACZ,SAAS;YACP,QAAQ;gBACN,UAAU;YACZ;YACA,OAAO;gBACL,SAAS;gBACT,MAAM;gBACN,MAAM;oBACJ,MAAM;gBACR;YACF;QACF;QACA,WAAW;YACT,UAAU;YACV,QAAQ;QACV;IACF;IAEA,qBACE,8OAAC;QAAK,OAAO;YAAE,OAAO;YAAS,QAAQ;QAAY;;0BACjD,8OAAC;gBAAG,OAAO;oBAAE,WAAW;gBAAS;0BAAG;;;;;;0BACpC,8OAAC;gBAAG,OAAO;oBAAE,WAAW;gBAAS;;oBAAG;oBAAgB;;;;;;;YACnD,KAAK,MAAM,GAAG,kBACb,8OAAC,sJAAA,CAAA,OAAI;gBAAC,MAAM;gBAAW,SAAS;;;;;qCAEhC,8OAAC;gBAAE,OAAO;oBAAE,WAAW;gBAAS;0BAAG;;;;;;;;;;;;AAI3C","debugId":null}}]
}